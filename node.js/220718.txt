node.js

- 구글 크롬의 자바스크립트 엔진에 기반해 만들어진 자바스크립트 런타임
- 이벤트 기반, 논 블로킹 I/O 모델을 사용해 가볍고 효율적
- npm 패키지는 세계에서 가장 큰 오픈 소스 라이브러리

특징
1. 자바스크립트 언어 사용
2. single Thread (싱글 스레드)
3. Non-blocking I/O (비동기)
4. Event-driven

single Thread
프로세스 
- 실행 중인 프로그램
- 운영체게에서 할당하는 작업의 단위

Thread(스레드)
- 프로세스 내에서 실행되는 흐름의 단위
- 하나의 프로세스에는 n개의 스레드가 존재하며 동시에 작동할 수 있다.

비동기와 동기
동기 : 데이터의 요청과 응답이 끝날때까지 실행 안함
비동기 : 동시에 일어나지 않는 것, 응답과 요청이 동시에 일어나지 않음

I/O : 파일 일고 쓰고 만들기 등

Event-driven
- 이벤트가 발생할 때 미리 지정해둔 작업을 수행
ex) 클릭, 네이트워크 요청, 타이머 등
- 이벤트 리스너 
 - 이벤트 등록 함수
- 콜백함수

call Stack(호출 스택) : 제일 마지막에 작업한것이 제일 먼저 실행 됨

Event Loop : 쉽게 이야기해서 이벤트가 발생했을때 함수가 실행된다

node.js의 역할
- 간단한 로직
- 대량의 클라이언트가 접속하는 서비스 (입출력이 많은 서비스)
- 빠른 개발 요구
- 빠른 응답시간 요구
- 비공기 방식에 어울리는 서비스 (스트리밍 서비스, 채팅 서비스 등)
-> 복잡도가 높으면 어울리지 않음

모듈 (Module) - 중요
- 특정한 기능을 하는 함수나 변수들의 집합
- 재사용 가능한 코드 조각

모듈의 장접
- 똑같은 코드를 반복작업 안해도 됨
- 코드를 한 번 가려놓을 수 있음
- 코드를 바꾸면 따로 신경 쓸 필요가 없음 -> 유지 보수가 좋음

객체
global (글로벌)
- 노드의 전역 객체
- 모든 파일에서 접근 가능
- 생략하여 사용 가능

console

timer

requrie
- 모듈을 불러올 때 사용하는 객체
주의점 : 모듈을 불러올 때 서로가 서로를 불러오는 순환참조가 나오지 않도록 해야 한다.

process
- 현재 실행 중인 노드 프로세스에 대한 정보

path 모듈
- 설정한 파일 경로 조작

