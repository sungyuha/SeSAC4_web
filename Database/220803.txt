MVC
장단점

- 장점
패턴을 구분해 개발한다
유지보수가 용이하다
유연성이 높다
확장성이 높다
협업에 용이하다

- 단점
완벽한 의존성 분리가 어렵다
설계 단계가 복잡하다
설계 시간이 오래 걸린다
클래스가 많아진다

MVC흐름

Model 
 데이터를 처리하는 부분
View
 UI 관련된 것을 처리하는 부분( 사용자에게 보여지는 부분 )
Controller
 View 와 Model을 연결해주는 부분

*** MVC 흐름도 *** (중요!!!)
1. 사용자가 접속
2. 브라우저로 오면 index에 들어옴
3. 경로 app.use("./~~")로 되어있으면 경로를 찾아감(rander)
4. router를 이용해서 experess로 경로가 등록되어 있으면
ex) r = experess.router
r.get("경로");
r.post("경로");

r.get('methed', c(컨트롤러).abc(함수));

exports로 내보낸다
-> function abc (req, res) {

}
Model.exports = {abc};
와 같은 의미

5. View를 호출할 수 있는 것은 Controller과만 연결되고 불러올 수 있다

6. 데이터를 처리하는 것은 Model에서만 할 수 있다. Model은 직접 값을 넣어서 실행을 시키는 함수(데이터와 관련 된 모든 처리를 한다.)
7. Model은 데이터를 받아서 Controller와 databases에 보내준다.